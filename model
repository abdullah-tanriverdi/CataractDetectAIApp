# scripts/train.py

import os
import cv2
import numpy as np
import tensorflow as tf
from tensorflow.keras import layers, models
from sklearn.model_selection import train_test_split

# Veri yolu
data_dir = r"C:\Users\abdul\Desktop\Cataract\dataset"
categories = ["immature", "mature"]

# Görselleri yükleme
data = []
for category in categories:
    path = os.path.join(data_dir, category)
    label = categories.index(category)
    
    for img_name in os.listdir(path):
        img_path = os.path.join(path, img_name)
        try:
            img = cv2.imread(img_path)
            img = cv2.resize(img, (128, 128))  # tüm görselleri 128x128 boyutuna getirelim
            data.append([img, label])
        except Exception as e:
            print("Hatalı görsel:", img_path)

# Verileri ayır
X = []
y = []

for img, label in data:
    X.append(img)
    y.append(label)

X = np.array(X) / 255.0  # Normalizasyon
y = np.array(y)

# Train/Test bölme
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Basit CNN modeli
model = models.Sequential([
    layers.Conv2D(32, (3, 3), activation='relu', input_shape=(128, 128, 3)),
    layers.MaxPooling2D(2, 2),
    
    layers.Conv2D(64, (3, 3), activation='relu'),
    layers.MaxPooling2D(2, 2),
    
    layers.Flatten(),
    layers.Dense(64, activation='relu'),
    layers.Dense(2, activation='softmax')  # 2 sınıf var
])

model.compile(optimizer='adam', loss='sparse_categorical_crossentropy', metrics=['accuracy'])

# Eğitme
model.fit(X_train, y_train, epochs=10, validation_data=(X_test, y_test))

# Modeli kaydet
model.save('model/cataract_model.h5')
